{"dependencies":[{"name":"/home/msdimos/桌面/workspace/doxjs/tsconfig.json","includedInParent":true,"mtime":1518708038618},{"name":"./DoxObject","loc":{"line":3,"column":26}},{"name":"./utils","loc":{"line":4,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DoxObject_1 = require(\"./DoxObject\");\nvar utils_1 = require(\"./utils\");\nvar DoxJS = /** @class */ (function () {\n    function DoxJS(target) {\n        if (!utils_1.isObject(target)) {\n            utils_1.warn(\"DoxJS only accept object as argument\");\n        }\n        else {\n            this.sourceObject = new DoxObject_1.DoxObject(target, this);\n        }\n    }\n    DoxJS.prototype.subscribe = function (action, excuteLater, context) {\n        var _this = this;\n        if (excuteLater === void 0) { excuteLater = false; }\n        if (utils_1.isFunction(action)) {\n            this.runtimeEvent = {\n                isLegal: true,\n                value: action\n            };\n            var fn = function () {\n                _this.sourceObject.extendsRuntimeEvent(_this.runtimeEvent);\n                action(_this.sourceObject.observe());\n                _this.runtimeEvent.isLegal = false;\n            };\n            return (excuteLater ? fn : fn());\n        }\n        else if (utils_1._toString.call(action) === '[object String]') {\n            if (utils_1.hasProperty(this.listeners, action)) {\n                if (context) {\n                    this.subscribe(this.listeners[action].bind(context), excuteLater);\n                }\n                else {\n                    this.subscribe(this.listeners[action], excuteLater);\n                }\n            }\n        }\n        else {\n            utils_1.warn(\"First parameter of subscribe should be Function or String\");\n        }\n    };\n    DoxJS.prototype.bindListeners = function (listeners) {\n        if (listeners === void 0) { listeners = {}; }\n        this.listeners = listeners;\n    };\n    DoxJS.prototype.observe = function () {\n        return this.sourceObject.observe();\n    };\n    DoxJS.prototype.bindActions = function (actions) {\n        if (actions === void 0) { actions = {}; }\n        this.actions = actions;\n    };\n    DoxJS.prototype.dispatch = function (action) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (utils_1.hasProperty(this.actions, action)) {\n            (_a = this.actions)[action].apply(_a, [this.sourceObject.observe()].concat(args));\n        }\n        var _a;\n    };\n    return DoxJS;\n}());\nexports.default = DoxJS;\n","map":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,yCAAwC;AACxC,iCAAsF;AAGtF;IAQI,eAAY,MAAS;QACjB,EAAE,CAAC,CAAC,CAAC,gBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACpB,YAAI,CAAC,sCAAsC,CAAC,CAAC;QACjD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,GAAG,IAAI,qBAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IAEM,yBAAS,GAAhB,UAAoB,MAA+B,EAAE,WAA4B,EAAE,OAAW;QAA9F,iBAyBC;QAzBoD,4BAAA,EAAA,mBAA4B;QAC7E,EAAE,CAAC,CAAC,kBAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG;gBAChB,OAAO,EAAE,IAAI;gBACb,KAAK,EAAkB,MAAM;aAChC,CAAC;YAEF,IAAI,EAAE,GAAG;gBACL,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;gBACxC,MAAO,CAAC,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;gBACtD,KAAI,CAAC,YAAY,CAAC,OAAO,GAAG,KAAK,CAAC;YACtC,CAAC,CAAA;YAED,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAA,CAAC,iBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,iBAAiB,CAAC,CAAC,CAAC;YACrD,EAAE,CAAC,CAAC,mBAAW,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAS,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;gBAC9E,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAS,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC;gBAChE,CAAC;YACL,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,YAAI,CAAC,2DAA2D,CAAC,CAAC;QACtE,CAAC;IACL,CAAC;IAEM,6BAAa,GAApB,UAAqB,SAAiD;QAAjD,0BAAA,EAAA,cAAiD;QAClE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAEM,uBAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IACvC,CAAC;IAEM,2BAAW,GAAlB,UAAmB,OAAwB;QAAxB,wBAAA,EAAA,YAAwB;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,wBAAQ,GAAf,UAAgB,MAAc;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC1C,EAAE,CAAC,CAAC,mBAAW,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YACpC,CAAA,KAAA,IAAI,CAAC,OAAO,CAAA,CAAC,MAAM,CAAC,YAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,SAAK,IAAI,GAAE;QAC/D,CAAC;;IACL,CAAC;IACL,YAAC;AAAD,CAAC,AA5DD,IA4DC","sourcesContent":["import { DoxObject } from \"./DoxObject\";\nimport { isObject, warn, getKeys, hasProperty, _toString, isFunction } from \"./utils\";\nimport { RuntimeEvent, DoxActions, DoxCallback } from \"./DoxInterfaces\";\n\nexport default class DoxJS<T> {\n    private runtimeEvent: RuntimeEvent<T>;\n    private sourceObject: DoxObject<T>;\n    private actions: DoxActions;\n    private listeners: {\n        [key: string]: DoxCallback<T>\n    };\n\n    constructor(target: T) {\n        if (!isObject(target)) {\n            warn(`DoxJS only accept object as argument`);\n        } else {\n            this.sourceObject = new DoxObject(target, this);\n        }\n    }\n\n    public subscribe<C>(action: DoxCallback<T> | string, excuteLater: boolean = false, context?: C) {\n        if (isFunction(action)) {\n            this.runtimeEvent = {\n                isLegal: true,\n                value: <DoxCallback<T>>action\n            };\n\n            let fn = () => {\n                this.sourceObject.extendsRuntimeEvent(this.runtimeEvent);\n                (<DoxCallback<T>>action)(this.sourceObject.observe());\n                this.runtimeEvent.isLegal = false;\n            }\n\n            return (excuteLater ? fn : fn());\n        } else if(_toString.call(action) === '[object String]') {\n            if (hasProperty(this.listeners, action)) {\n                if (context) {\n                    this.subscribe(this.listeners[<string>action].bind(context), excuteLater);\n                } else {\n                    this.subscribe(this.listeners[<string>action], excuteLater);\n                }\n            }\n        } else {\n            warn(`First parameter of subscribe should be Function or String`);\n        }\n    }\n\n    public bindListeners(listeners: { [key: string]: DoxCallback<T> } = {}) {\n        this.listeners = listeners;\n    }\n\n    public observe(): T {\n        return this.sourceObject.observe();\n    }\n\n    public bindActions(actions: DoxActions = {}) {\n        this.actions = actions;\n    }\n\n    public dispatch(action: string, ...args: any[]) {\n        if (hasProperty(this.actions, action)) {\n            this.actions[action](this.sourceObject.observe(), ...args);\n        }\n    }\n}\n"]}},"hash":"efa1c9121d910fd073fbccf615d522a7","cacheData":{"env":{}}}